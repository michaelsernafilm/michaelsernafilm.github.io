{"version":3,"file":"static/js/24.3d23795e.chunk.js","mappings":"mMAGA,SACeA,EAAKC,GAAA,OAAAC,EAAAC,MAAC,KAADC,UAAA,UAAAF,IAiBnB,OAjBmBA,GAAAG,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAApB,SAAAC,EAAqBC,GAAI,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEsC,GADvDP,EAASQ,EAAWT,GACpBE,EAAWF,EAAKU,YAAaP,EAAgBD,EAASS,GACxDV,EAAQ,CAAFK,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EACFI,eAAeC,YAAYZ,EAAOa,WAAU,OAC1B,GAD0BR,EAAAS,IAC9B,IAApBd,EAAOe,EAAAA,IAAiBV,EAAAS,GAAA,CAAAT,EAAAE,KAAA,eAAAF,EAAAE,KAAA,EAAU,IAAIS,SAAQ,SAACC,GAAG,OAAKjB,EAAOe,EAAAA,IAASG,KAAKD,EAAI,IAAC,OAE/ElB,EAAKoB,cACG,OAANnB,QAAM,IAANA,GAAAA,EAAQoB,YACVrB,EAAKqB,WAAY,GACnBrB,EAAKsB,iBACHC,EAAAA,EAAAA,IAAgBpB,EAAe,CAC7BqB,MAAOC,EAAsBzB,GAC7B0B,MAAa,OAANzB,QAAM,IAANA,GAAiB,QAAXG,EAANH,EAAQ0B,iBAAS,IAAAvB,OAAX,EAANA,EAAmBwB,SAASC,MAGxC,yBAAAvB,EAAAwB,OAAA,GAAA/B,EAAA,MACFL,MAAA,KAAAC,UAAA,CACD,SAAS8B,EAAsBzB,GAC7B,IAAME,EAAWF,EAAKU,YAAaP,EAAgBD,EAASS,EAAGa,EAAQ,CAAC,EACxE,IAAKtB,EAAS6B,EACZ,OAAOP,EAAM,IACmBQ,EADnBC,GAAAC,EAAAA,EAAAA,GACIlC,EAAKmC,YAAU,IAAlC,IAAAF,EAAAG,MAAAJ,EAAAC,EAAAI,KAAAC,MAAoC,KAAzBC,EAAIP,EAAAQ,MACb,GAAItC,EAAS6B,EAAEU,IAAIF,EAAKG,MAAO,KAAAC,EACvBC,EAAW1C,EAAS6B,EAAEc,IAAIN,EAAKG,MAC/BI,EAA+C,QAAxCH,EAAGxC,EAAc4C,GAAGvB,MAAMoB,GAAUI,YAAI,IAAAL,OAAA,EAArCA,EAAuCM,KACvD,GAAIH,EAAS,CACX,IAAMI,EAAYlD,EAAKmD,aAAaZ,EAAKG,MACzClB,EAAMoB,GAAYE,EAAQI,EAC5B,CACF,CACF,CAAC,OAAAE,GAAAnB,EAAAF,EAAAqB,EAAA,SAAAnB,EAAAoB,GAAA,CACD,OAAO7B,CACT,CACA,SAASf,EAAWT,GAElB,IADA,IAAiCG,EAAlBH,EAAKU,YAAsCC,EAAG2C,EAAOtD,EAAKuD,WAAYC,EAASrD,EAAc4C,GAAGU,QAAQC,MAAM,IAAK,GAAG,GAAK,IACnIJ,GAAM,CACX,GAAsB,IAAlBA,EAAKK,UAAkBL,EAAKxC,UAAU8C,WAAWJ,GACnD,OAAOF,EAETA,EAAOA,EAAKC,UACd,CACA,OAAO,IACT,C","sources":["../node_modules/maverick.js/dist/prod/chunks/setup-U23QSQZY.js"],"sourcesContent":["import { CONNECT, createComponent } from './chunk-ICGXXNWU.js';\nimport './chunk-OJRMMG75.js';\n\n// src/element/setup.ts\nasync function setup(host) {\n  const parent = findParent(host);\n  const hostCtor = host.constructor, componentCtor = hostCtor.a;\n  if (parent) {\n    await customElements.whenDefined(parent.localName);\n    parent[CONNECT] === true || await new Promise((res) => parent[CONNECT].push(res));\n  }\n  if (host.isConnected) {\n    if (parent?.keepAlive)\n      host.keepAlive = true;\n    host.attachComponent(\n      createComponent(componentCtor, {\n        props: resolvePropsFromAttrs(host),\n        scope: parent?.component?.instance.c\n      })\n    );\n  }\n}\nfunction resolvePropsFromAttrs(host) {\n  const hostCtor = host.constructor, componentCtor = hostCtor.a, props = {};\n  if (!hostCtor.e)\n    return props;\n  for (const attr of host.attributes) {\n    if (hostCtor.e.has(attr.name)) {\n      const propName = hostCtor.e.get(attr.name);\n      const convert = componentCtor.el.props[propName].type?.from;\n      if (convert) {\n        const attrValue = host.getAttribute(attr.name);\n        props[propName] = convert(attrValue);\n      }\n    }\n  }\n  return props;\n}\nfunction findParent(host) {\n  let hostCtor = host.constructor, componentCtor = hostCtor.a, node = host.parentNode, prefix = componentCtor.el.tagName.split(\"-\", 1)[0] + \"-\";\n  while (node) {\n    if (node.nodeType === 1 && node.localName.startsWith(prefix)) {\n      return node;\n    }\n    node = node.parentNode;\n  }\n  return null;\n}\n\nexport { setup };\n"],"names":["setup","_x","_setup","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","host","parent","hostCtor","componentCtor","_parent$component","wrap","_context","prev","next","findParent","constructor","a","customElements","whenDefined","localName","t0","CONNECT","Promise","res","push","isConnected","keepAlive","attachComponent","createComponent","props","resolvePropsFromAttrs","scope","component","instance","c","stop","e","_step","_iterator","_createForOfIteratorHelper","attributes","s","n","done","attr","value","has","name","_componentCtor$el$pro","propName","get","convert","el","type","from","attrValue","getAttribute","err","f","node","parentNode","prefix","tagName","split","nodeType","startsWith"],"sourceRoot":""}